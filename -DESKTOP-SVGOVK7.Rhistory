# #          FltSvy=Cell+3,
# #          Gender=0,
# #          Part=0,
# #          Nsamp=5)
# # LL_LF_new <- LL_LF[,c(43:48,4:42)]
#
# # add new PS anf LL LF
# LF <- rbind(data.matrix(LF0),data.matrix(PS_LF_new)) %>% data.frame()
# names(LF) <- names(LF0)
# data$lencomp <- LF
# data$N_lencomp <- nrow(LF)
# # write data file
SS_writedat(data,outfile = "D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/Model/test1/test_data.ss",version = "3.24",overwrite = TRUE)
# fix a bug in r4ss
File <- readLines("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/Model/test1/test_data.ss", warn = F)
File[19] = "1 #_Nsexes"
# turn off comp tail compression
File[492] = "-1"
# Survey LF
SS_LF <- read.csv(file="D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/VAST_LF/SS.csv")
# SS_LF$Nsamp <- 5
Line <- match("0 #_N_sizefreq_methods", File)
File[Line] = 1 # N WtFreq methods to read
File[Line+1] = 13 # nbins per method
File[Line+2] = 2 # units per each method
File[Line+3] = 3 # scale per each method
File[Line+4] = 0.0001 # mincomp to add to each obs (entry for each method)
File[Line+5] = nrow(SS_LF) # Number of observations per method
File[Line+6] = paste0(gsub(", "," ",toString(seq(40,160,10)))) # size bins
for (l in 1:nrow(SS_LF)) {
File[Line+6+l] <- paste0(gsub(", "," ",toString(SS_LF[l,])))
}
File[Line+7+nrow(SS_LF)] = 0 # do tags
File[Line+8+nrow(SS_LF)] = 0 # no morphcomp data
File[Line+9+nrow(SS_LF)] = 999
File[Line+10+nrow(SS_LF)] = "ENDDATA"
writeLines(File, "D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/Model/test1/test_data.ss")
library(r4ss)
library(tidyverse)
# load("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/YFT_4area_observations_1_100_v2.RData")
load("C:/Users/haiku/Desktop/Wkshop/Data/update_YFT_2022_01_24/YFT_4area_observations_1_100_ESS_05.RData")
data <- dat_4A_1
# Modify Fleet info
data$Nsurveys <- 1
data$N_areas <- 1
data$fleetnames <- c(data$fleetnames[1:16],"llcpue")
data$surveytiming <- rep(0.5,17)
data$areas <- rep(1,17)
# Fleet info
fleetinfo1 <- cbind(data$fleetinfo1[,1:16],data.frame("llcpue"= c(0.5, 1)))
fleetinfo1[2,] <- 1
data$fleetinfo1 <- fleetinfo1
fleetinfo <- rbind(data$fleetinfo[1:16,],llcpue=c(0.5, 1, 3, 0))
# Survey CPUE
data$CPUEinfo <- data$CPUEinfo[1:17,]
CPUE <- read.csv("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/VAST_Index/Table_for_SS3.csv")
CPUE$Fleet <- 17
CPUE$SD_log <- CPUE$SD_log + 0.2 - mean(CPUE$SD_log)
data$CPUE <- CPUE[,1:5]
data$N_cpue <- nrow(CPUE)
# LF0 <- data$lencomp
# LL_LF <- read.csv("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/Old/Data/LL_LF_Nominal.csv")
# LF <- rbind(data.matrix(LF0),data.matrix(LL_LF)) %>% data.frame()
# names(LF) <- names(LF0)
# data$lencomp <- LF
# # data$N_lencomp <- nrow(LF)
# Delete tagging data
data$do_tags <- 0
# # Catch
# Catch <- data$catch
#
# PS_Catch <- read.csv("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree/PS/PS_Catch.csv")
# PS_Catch <- PS_Catch %>%
#   spread(Cell,Total_Catch)
# Catch[,11:13] <- PS_Catch[3:5] / 1000
#
# # LL_Catch <- read.csv("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree/LL/LL_Catch.csv")
# # LL_Catch <- LL_Catch %>%
# #   spread(Cell,Total_Catch)
# # Catch[,4:7] <- LL_Catch[3:6] / 1000
#
# data$catch <- Catch
#
# # LF
# LF0 <- data$lencomp
# # remove old PS and LL LF (fleet 4-7, 11-13)
# # LF0 <- LF0[which(LF0$FltSvy %in% c(1:3,8:10,14:17)),]
# LF0 <- LF0[which(LF0$FltSvy %in% c(1:10,14:17)),]
#
# PS_LF <- read.csv("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree/PS/PS_LF.csv")
# # new PS LF
# PS_LF <- PS_LF %>%
#   mutate(Yr=(year-1)*4+quarter,
#          Seas=1,
#          FltSvy=Cell+10,
#          Gender=0,
#          Part=0,
#          Nsamp=5)
# PS_LF_new <- PS_LF[,c(43:48,4:42)]
#
# # LL_LF <- read.csv("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree/LL/LL_LF.csv")
# # # new LL LF
# # LL_LF <- LL_LF %>%
# #   mutate(Yr=(year-1)*4+quarter,
# #          Seas=1,
# #          FltSvy=Cell+3,
# #          Gender=0,
# #          Part=0,
# #          Nsamp=5)
# # LL_LF_new <- LL_LF[,c(43:48,4:42)]
#
# # add new PS anf LL LF
# LF <- rbind(data.matrix(LF0),data.matrix(PS_LF_new)) %>% data.frame()
# names(LF) <- names(LF0)
# data$lencomp <- LF
# data$N_lencomp <- nrow(LF)
# # write data file
SS_writedat(data,outfile = "D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/Model/test1/test_data.ss",version = "3.24",overwrite = TRUE)
# fix a bug in r4ss
File <- readLines("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/Model/test1/test_data.ss", warn = F)
File[19] = "1 #_Nsexes"
# turn off comp tail compression
File[492] = "-1"
File[493] = "1e-9"
# Survey LF
SS_LF <- read.csv(file="D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/VAST_LF/SS.csv")
# SS_LF$Nsamp <- 5
Line <- match("0 #_N_sizefreq_methods", File)
File[Line] = 1 # N WtFreq methods to read
File[Line+1] = 13 # nbins per method
File[Line+2] = 2 # units per each method
File[Line+3] = 3 # scale per each method
File[Line+4] = 0.0001 # mincomp to add to each obs (entry for each method)
File[Line+5] = nrow(SS_LF) # Number of observations per method
File[Line+6] = paste0(gsub(", "," ",toString(seq(40,160,10)))) # size bins
for (l in 1:nrow(SS_LF)) {
File[Line+6+l] <- paste0(gsub(", "," ",toString(SS_LF[l,])))
}
File[Line+7+nrow(SS_LF)] = 0 # do tags
File[Line+8+nrow(SS_LF)] = 0 # no morphcomp data
File[Line+9+nrow(SS_LF)] = 999
File[Line+10+nrow(SS_LF)] = "ENDDATA"
writeLines(File, "D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/Model/test1/test_data.ss")
library(r4ss)
Path <- "D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/Model/test1/"
Rep = SS_output(dir=Path,ncols=400,covar=T)
SS_plots(replist=Rep, forecastplot=F, uncertainty=T, datplot=T, btarg=0, minbthresh=0)
dir.create("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree")
library(tidyverse)
### Purse-seine
load("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/PS_LF.RData")
LF_raw <- LF_DF %>%
mutate(year=ceiling(Year/4),quarter=(Year-1)%%4 +1) %>%
select(year,quarter,Lat,Lon,Length,LF) %>%
rename(lat=Lat,lon=Lon)
LF <- LF_DF[,c(3:7)] %>%
mutate(Length2=cut(Length,breaks = c(0,seq(30, 150, 10),220),right = F,labels = seq(20, 150, 10))) %>%
mutate(year=ceiling(Year/4),quarter=(Year-1)%%4 +1) %>%
group_by(year,quarter,Lat,Lon,Length2) %>% summarise(LF=sum(LF)) %>%
spread(Length2,LF) %>% rename(lat=Lat,lon=Lon) %>% data.frame()
library(FishFreqTree)
fcol <- 5 # the first column with LF_Tree info
lcol <- 18 # the last column with LF_Tree info
bins <- seq(20,150,10)
LF <- LF_DF[,c(3:7)] %>%
mutate(Length2=cut(Length,breaks = c(0,seq(30, 150, 10),220),right = F,labels = seq(20, 150, 10))) %>%
mutate(year=ceiling(Year/4),quarter=(Year-1)%%4 +1) %>%
group_by(year,quarter,Lat,Lon,Length2) %>% summarise(LF=sum(LF)) %>%
spread(Length2,LF) %>% rename(lat=Lat,lon=Lon) %>% data.frame()
library(FishFreqTree)
fcol <- 5 # the first column with LF_Tree info
lcol <- 18 # the last column with LF_Tree info
bins <- seq(20,150,10)
Nsplit <- 2 # the number of splits (the number of cells - 1)
dir.create("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree/PS/")
save_dir <- "D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree/PS/"
# run the regression tree
my_select_matrix <- data.matrix(expand.grid(
select1 = 1:2,
select2 = 1:1
))
LF_Loop <- loop_regression_tree(LF,fcol,lcol,bins,Nsplit,save_dir,select_matrix = my_select_matrix)
make.split.map(LF_Loop$LF_Tree$LF,Nsplit,save_dir)
select <- as.numeric(LF_Loop$Imp_DF_sorted[1,1:Nsplit])
# load PS catch data
load("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/PS_Catch.RData")
Catch <- Catch_DF %>%
mutate(year=ceiling(Year/4),quarter=(Year-1)%%4 +1) %>%
rename(lat=Lat,lon=Lon) %>%
select(year,quarter,lat,lon,Catch)
# use the regression tree package to group catch
LF$dummy = FALSE
Catch_Grid <- cbind(Catch[,1:4],matrix(0,nrow=nrow(Catch),ncol=lcol-fcol+1))
Catch_Grid$dummy = TRUE
names(Catch_Grid) <- names(LF)
# LF[6:8,fcol:lcol] <- LF[6:8,fcol:lcol] / 2
# LF_new include dummy data for catch allocation
LF_new <- rbind(LF,Catch_Grid)
LF_new$lat <- as.numeric(LF_new$lat)
LF_new$lon <- as.numeric(LF_new$lon)
LF_Tree <- run_regression_tree(LF_new,fcol,lcol,bins,Nsplit,save_dir,manual=TRUE,select=select,include_dummy = TRUE)
# extract catch flag derived from the regression tree package
Cell <- LF_Tree$LF$Flag2[which(LF_Tree$LF$dummy == TRUE)]
# combine the flag with catch data and then group catch
Catch_Fishery <- cbind(Catch, Cell) %>%
group_by(year,quarter,Cell) %>%
summarise(Total_Catch=sum(Catch)) %>%
mutate(Cell=factor(Cell))
Catch_Fishery_plot <- cbind(Catch, Cell) %>%
group_by(year,Cell) %>%
summarise(Total_Catch=sum(Catch)) %>%
mutate(Cell=factor(Cell))
ggplot(data=Catch_Fishery_plot) +
geom_line(aes(x=year,y=Total_Catch,color=Cell)) +
theme_bw()
write.csv(Catch_Fishery,file=paste0(save_dir,"PS_Catch.csv"),row.names = FALSE)
Catch$lat <- as.numeric(levels(Catch$lat))[Catch$lat]
Catch$lon <- as.numeric(levels(Catch$lon))[Catch$lon]
Catch_cell <- cbind(Catch, Cell)
LF_raw_cell <- left_join(LF_raw,Catch_cell) %>%
mutate(LF_raised = LF * Catch) %>% # catch weighted
# mutate(LF_raised = LF) %>%
select(year,quarter,lat,lon,Cell,Length,LF_raised)
# combine the flag with catch data and then group catch
LF_Fishery <- LF_raw_cell %>%
group_by(Cell,year,quarter,Length) %>%
summarise(lf_raised=sum(LF_raised)) %>%
group_by(Cell,year,quarter) %>%
mutate(lf_sum=sum(lf_raised)) %>%
filter(lf_sum > 0) %>%
mutate(lf=lf_raised/lf_sum) %>%
select(Cell,year,quarter,Length,lf) %>%
spread(Length,lf)
write.csv(LF_Fishery,file=paste0(save_dir,"PS_LF.csv"),row.names = FALSE)
library(tidyverse)
load("Data/sim_1.RData")
# load("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/25/sim_1.RData")
Lat_grid <- data.frame("lat" = paste0("r",as.character(seq(1,13))),
"Lat" = sim_1$layers$`layer[latitude]`$data[,1])
Lon_grid <- data.frame("lon" = paste0("c",as.character(seq(1,17))),
"Lon" = sim_1$layers$`layer[longitude]`$data[1,])
# load("Data/sim_1_v2.RData")
load("C:/Users/haiku/Desktop/Wkshop/Data/sim_1.RData")
# LL CPUE data
for (year in 81:256) {
CPUE <- sim_1$obs[[paste0("simulated_cpue_ll_jpn_",year)]]
if(year==81) Data_Geostat0 <- data.frame("Year"=year,"LatLon"=CPUE$data$obs[,1],"Catch_KG"=CPUE$data$obs[,2])
else Data_Geostat0 <- rbind(Data_Geostat0,
data.frame("Year"=year,"LatLon"=CPUE$data$obs[,1],"Catch_KG"=CPUE$data$obs[,2]))
}
Data_Geostat <- Data_Geostat0 %>%
mutate(Catch_KG=ifelse(as.numeric(levels(Catch_KG))[Catch_KG]<1e-6,0,as.numeric(levels(Catch_KG))[Catch_KG])) %>%
separate(LatLon, c("lat", "lon"), "-")
Data_Geostat <- left_join(left_join(Data_Geostat,Lat_grid),Lon_grid) %>%
mutate(Lat=as.numeric(levels(Lat))[Lat],Lon=as.numeric(levels(Lon))[Lon])
f0 <- ggplot(data=Data_Geostat) +
geom_point(aes(x=Lon,y=Lat)) +
facet_wrap(~Year) +
theme_bw()
ggsave(f0,file="Data/CPUE.png", width = 24, height = 16)
save(Data_Geostat,file="Data/CPUE.RData")
# LL LF data
for (year in 9:238) {
# year=210
LF <- sim_1$obs[[paste0("simulated_lf_ll_",year)]]
if(length(LF$data$obs)>40) LF_DF_year <- data.frame(LF$data$obs) %>% mutate(Year=year) # more than 1 obs
if(length(LF$data$obs)==40) LF_DF_year <- data.frame(t(LF$data$obs)) %>% mutate(Year=year) # 1 obs
if(year==9) LF_DF0 <- LF_DF_year
else LF_DF0 <- rbind(LF_DF0,LF_DF_year)
}
names(LF_DF0)[1] <- "LatLon"
names(LF_DF0)[2:40] <- LF$data$length_bins[1:39]
# LF_DF0 <- unique(LF_DF0)
LF_DF <- LF_DF0 %>% gather(2:40,key="Length",value = "LF") %>%
mutate(Length=as.numeric(Length),LF=as.numeric(LF)) %>%
separate(LatLon, c("lat", "lon"), "-")
# LF_DF <- unique(LF_DF0) %>% gather(2:40,key="Length",value = "LF") %>%
#   mutate(Length=as.numeric(Length),LF=as.numeric(LF)) %>%
#   separate(LatLon, c("lat", "lon"), "-")
LF_DF <- left_join(left_join(LF_DF,Lat_grid),Lon_grid) %>%
mutate(Lat=as.numeric(levels(Lat))[Lat],Lon=as.numeric(levels(Lon))[Lon])
f1 <- ggplot(data=LF_DF) +
geom_point(aes(x=Lon,y=Lat)) +
# facet_wrap(~Year) +
theme_bw(12)
ggsave(f1,file="Data/LL_LF.png", width = 10, height = 8)
save(LF_DF,file="Data/LL_LF.RData")
# nominal LL LF
Data <- LF_DF0 %>% gather(2:40,key="Length",value = "LF") %>%
# mutate(spp=floor(Length/10)*10) %>%
mutate(Length=as.numeric(Length)) %>%
group_by(Year,Length) %>% summarise(LF=sum(as.numeric(LF))) %>%
spread(Length,LF)
size <- LF_DF0 %>% group_by(Year) %>%
summarise(n=length(unique(LatLon)))
Data <- left_join(Data,size)
LL_LF <- cbind(Data$Year,1,17,0,0,Data$n,Data[,2:40]) %>% data.frame()
write.csv(LL_LF,file="Data/LL_LF_Nominal.csv",row.names = FALSE)
# PS LF data
for (year in 121:256) {
# year=210
LF <- sim_1$obs[[paste0("simulated_lf_ps_",year)]]
if(length(LF$data$obs)>40) LF_DF_year <- data.frame(LF$data$obs) %>% mutate(Year=year) # more than 1 obs
if(length(LF$data$obs)==40) LF_DF_year <- data.frame(t(LF$data$obs)) %>% mutate(Year=year) # 1 obs
if(year==121) LF_DF0 <- LF_DF_year
else LF_DF0 <- rbind(LF_DF0,LF_DF_year)
}
names(LF_DF0)[1] <- "LatLon"
names(LF_DF0)[2:40] <- LF$data$length_bins[1:39]
LF_DF0 <- unique(LF_DF0)
LF_DF <- LF_DF0 %>% gather(2:40,key="Length",value = "LF") %>%
mutate(Length=as.numeric(Length),LF=as.numeric(LF)) %>%
separate(LatLon, c("lat", "lon"), "-")
flag <- LF_DF %>% group_by(Year,lat,lon) %>% summarise(s=sum(LF))
LF_DF <- left_join(left_join(LF_DF,Lat_grid),Lon_grid) %>%
mutate(Lat=as.numeric(levels(Lat))[Lat],Lon=as.numeric(levels(Lon))[Lon])
f2 <- ggplot(data=LF_DF) +
geom_point(aes(x=Lon,y=Lat)) +
# facet_wrap(~Year) +
theme_bw()
ggsave(f2, file="Data/PS_LF.png", width = 10, height = 8)
save(LF_DF, file="Data/PS_LF.RData")
# # Troll LF data
# for (year in 134:255) {
#   # year=210
#   LF <- sim_1$obs[[paste0("simulated_lf_trol_",year)]]
#
#   if(length(LF$data$obs)>40) LF_DF_year <- data.frame(LF$data$obs) %>% mutate(Year=year) # more than 1 obs
#   if(length(LF$data$obs)==40) LF_DF_year <- data.frame(t(LF$data$obs)) %>% mutate(Year=year) # 1 obs
#
#   if(year==134) LF_DF0 <- LF_DF_year
#   else LF_DF0 <- rbind(LF_DF0,LF_DF_year)
# }
#
# names(LF_DF0)[1] <- "LatLon"
# names(LF_DF0)[2:40] <- LF$data$length_bins[1:39]
#
# LF_DF <- LF_DF0 %>% gather(2:40,key="Length",value = "LF") %>%
#   mutate(Length=as.numeric(Length),LF=as.numeric(LF)) %>%
#   separate(LatLon, c("lat", "lon"), "-")
#
# LF_DF <- left_join(left_join(LF_DF,Lat_grid),Lon_grid) %>%
#   mutate(Lat=as.numeric(levels(Lat))[Lat],Lon=as.numeric(levels(Lon))[Lon])
#
# f3 <- ggplot(data=LF_DF) +
#   geom_point(aes(x=Lon,y=Lat)) +
#   facet_wrap(~Year) +
#   theme_bw()
#
# ggsave(f3, file="Data/Troll_LF.png", width = 10, height = 8)
#
# save(LF_DF, file="Data/Troll_LF.RData")
#
#
# PS catch data
for (year in 1:256) {
# year=210
Catch <- sim_1$layers[[paste0("layer[fishing_ps_",year,"]")]]
Catch_DF_year <- data.frame(Catch = as.numeric(Catch$data[1:(13*17)]),
Lat = rep(Lat_grid$Lat,17),
Lon = rep(Lon_grid$Lon,each=13),
Year = year)
if(year==1) Catch_DF <- Catch_DF_year
else Catch_DF <- rbind(Catch_DF,Catch_DF_year)
}
save(Catch_DF, file="Data/PS_Catch.RData")
# LL catch data
for (year in 1:256) {
# year=210
Catch <- sim_1$layers[[paste0("layer[fishing_ll_",year,"]")]]
Catch_DF_year <- data.frame(Catch = as.numeric(Catch$data[1:(13*17)]),
Lat = rep(Lat_grid$Lat,17),
Lon = rep(Lon_grid$Lon,each=13),
Year = year)
if(year==1) Catch_DF <- Catch_DF_year
else Catch_DF <- rbind(Catch_DF,Catch_DF_year)
}
save(Catch_DF, file="Data/LL_Catch.RData")
# Regression Tree for PS
dir.create("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree")
library(tidyverse)
### Purse-seine
load("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/PS_LF.RData")
LF_raw <- LF_DF %>%
mutate(year=ceiling(Year/4),quarter=(Year-1)%%4 +1) %>%
select(year,quarter,Lat,Lon,Length,LF) %>%
rename(lat=Lat,lon=Lon)
LF <- LF_DF[,c(3:7)] %>%
mutate(Length2=cut(Length,breaks = c(0,seq(30, 150, 10),220),right = F,labels = seq(20, 150, 10))) %>%
mutate(year=ceiling(Year/4),quarter=(Year-1)%%4 +1) %>%
group_by(year,quarter,Lat,Lon,Length2) %>% summarise(LF=sum(LF)) %>%
spread(Length2,LF) %>% rename(lat=Lat,lon=Lon) %>% data.frame()
# save(LF,file="LF.RData")
library(FishFreqTree)
fcol <- 5 # the first column with LF_Tree info
lcol <- 18 # the last column with LF_Tree info
bins <- seq(20,150,10)
Nsplit <- 2 # the number of splits (the number of cells - 1)
dir.create("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree/PS/")
save_dir <- "D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/Tree/PS/"
# run the regression tree
my_select_matrix <- data.matrix(expand.grid(
select1 = 1:2,
select2 = 1:1
))
LF_Loop <- loop_regression_tree(LF,fcol,lcol,bins,Nsplit,save_dir,select_matrix = my_select_matrix)
make.split.map(LF_Loop$LF_Tree$LF,Nsplit,save_dir)
ggsave(file=paste0(save_dir,"Trees.png"), width = 10, height = 8)
select <- as.numeric(LF_Loop$Imp_DF_sorted[1,1:Nsplit])
# load PS catch data
load("D:/OneDrive - IATTC/IATTC/2021/Spatial-SA/SpatialAssessModelling/Data/PS_Catch.RData")
Catch <- Catch_DF %>%
mutate(year=ceiling(Year/4),quarter=(Year-1)%%4 +1) %>%
rename(lat=Lat,lon=Lon) %>%
select(year,quarter,lat,lon,Catch)
# use the regression tree package to group catch
LF$dummy = FALSE
Catch_Grid <- cbind(Catch[,1:4],matrix(0,nrow=nrow(Catch),ncol=lcol-fcol+1))
Catch_Grid$dummy = TRUE
names(Catch_Grid) <- names(LF)
# LF[6:8,fcol:lcol] <- LF[6:8,fcol:lcol] / 2
# LF_new include dummy data for catch allocation
LF_new <- rbind(LF,Catch_Grid)
LF_new$lat <- as.numeric(LF_new$lat)
LF_new$lon <- as.numeric(LF_new$lon)
LF_Tree <- run_regression_tree(LF_new,fcol,lcol,bins,Nsplit,save_dir,manual=TRUE,select=select,include_dummy = TRUE)
# extract catch flag derived from the regression tree package
Cell <- LF_Tree$LF$Flag2[which(LF_Tree$LF$dummy == TRUE)]
# combine the flag with catch data and then group catch
Catch_Fishery <- cbind(Catch, Cell) %>%
group_by(year,quarter,Cell) %>%
summarise(Total_Catch=sum(Catch)) %>%
mutate(Cell=factor(Cell))
Catch_Fishery_plot <- cbind(Catch, Cell) %>%
group_by(year,Cell) %>%
summarise(Total_Catch=sum(Catch)) %>%
mutate(Cell=factor(Cell))
ggplot(data=Catch_Fishery_plot) +
geom_line(aes(x=year,y=Total_Catch,color=Cell)) +
theme_bw()
#
# library(patchwork)
write.csv(Catch_Fishery,file=paste0(save_dir,"PS_Catch.csv"),row.names = FALSE)
# # use the regression tree package to group lf
# LF_Grid <- cbind(LF_raw[,1:4],matrix(0,nrow=nrow(LF),ncol=lcol-fcol+1))
# LF_Grid$dummy = TRUE
# names(LF_Grid) <- names(LF)
Catch$lat <- as.numeric(levels(Catch$lat))[Catch$lat]
Catch$lon <- as.numeric(levels(Catch$lon))[Catch$lon]
Catch_cell <- cbind(Catch, Cell)
LF_raw_cell <- left_join(LF_raw,Catch_cell) %>%
mutate(LF_raised = LF * Catch) %>% # catch weighted
# mutate(LF_raised = LF) %>%
select(year,quarter,lat,lon,Cell,Length,LF_raised)
# combine the flag with catch data and then group catch
LF_Fishery <- LF_raw_cell %>%
group_by(Cell,year,quarter,Length) %>%
summarise(lf_raised=sum(LF_raised)) %>%
group_by(Cell,year,quarter) %>%
mutate(lf_sum=sum(lf_raised)) %>%
filter(lf_sum > 0) %>%
mutate(lf=lf_raised/lf_sum) %>%
select(Cell,year,quarter,Length,lf) %>%
spread(Length,lf)
write.csv(LF_Fishery,file=paste0(save_dir,"PS_LF.csv"),row.names = FALSE)
# # catch-weighted tree
# Nsplit <- 2 # the number of splits (the number of cells - 1)
#
# # run the regression tree
# my_select_matrix <- data.matrix(expand.grid(
#   select1 = 1:2,
#   select2 = 1:1
# ))
#
# LF_weight <- left_join(LF,Catch) %>%
#   rename(weight=Catch) %>%
#   mutate(weight=weight/mean(weight))
#
# LF_Loop <- loop_regression_tree(LF_weight,fcol,lcol,bins,Nsplit,save_dir,select_matrix = my_select_matrix)
# make.split.map(LF_Loop$LF_Tree$LF,Nsplit,save_dir)
#
# select <- as.numeric(LF_Loop$Imp_DF_sorted[1,1:Nsplit])
#
# Catch_Grid$weight <- 1
# LF_weight_new <- rbind(LF_weight,Catch_Grid)
# LF_weight_new$lat <- as.numeric(LF_weight_new$lat)
# LF_weight_new$lon <- as.numeric(LF_weight_new$lon)
#
# LF_Tree <- run_regression_tree(LF_weight_new,fcol,lcol,bins,Nsplit,save_dir,manual=TRUE,select=select,include_dummy = TRUE)
#
# Cell <- LF_Tree$LF$Flag2[which(LF_Tree$LF$dummy == TRUE)]
#
# # combine the flag with catch data and then group catch
# Catch_Fishery <- cbind(Catch, Cell) %>%
#   group_by(year,quarter,Cell) %>%
#   summarise(Total_Catch=sum(Catch)) %>%
#   mutate(Cell=factor(Cell))
#
# Catch_Fishery_plot <- cbind(Catch, Cell) %>%
#   group_by(year,Cell) %>%
#   summarise(Total_Catch=sum(Catch)) %>%
#   mutate(Cell=factor(Cell))
#
# ggplot(data=Catch_Fishery_plot) +
#   geom_line(aes(x=year,y=Total_Catch,color=Cell)) +
#   theme_bw()
# #
# # library(patchwork)
# # ggsave((f1 + f2) / (f3 + f4), file=paste0(save_dir,"Trees.png"), width = 14, height = 12)
load("C:/Users/haiku/Desktop/Wkshop/Data/update_YFT_2022_01_24/YFT_1area_observations_1_100_ESS_05.RData")
dat_1A_1$CPUE
plot(dat_1A_1$CPUE$cpu)
